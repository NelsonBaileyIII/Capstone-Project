{"version":3,"sources":["images/FujiExample.jpg","images/CameraExample.jpg","images/example_14.jpg","images/example_13.jpg","config/keys.js","actions/authActions.js","components/LoginModal.js","actions/MyPaletteAPI.js","components/Logout.js","components/MobileContainer.js","components/DesktopContainer.js","components/HeaderMenu.js","components/LandingPageExample.js","components/LandingIcons.js","components/LandingPageExampleSets.js","components/SaveExample.js","components/HowItWorks.js","components/LandingPage.js","actions/convertRGB.js","actions/colorInfoActions.js","components/EditModalColorInfo.js","components/EditModal.js","components/ConfirmDeleteModal.js","components/EllipseMenu.js","components/MyPallettes.js","components/Footer.js","actions/index.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Generate.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/errorsReducer.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","clarifaiID","logoutUser","type","tokenConfig","token","localStorage","getItem","config","headers","Content-type","Isemail","require","LoginModal","state","activeItem","header","button","verifyPassword","email","userNamePlaceHolder","passWordPlaceHolder","description","errorStatusPassword","errorMsgPassword","errorStatusEmail","errorMsgEmail","showLogin","size","_this","setState","props","openModal","clearErrors","showSignup","close","resetDefaults","username","password","closeModal","handleLogInClick","e","_ref","name","handleSignUpClick","_ref2","this","event","key","Object","defineProperty","target","value","preventDefault","length","validate","registerUser","loginUser","_this2","react_default","a","createElement","className","Input","placeholder","autoComplete","onChange","handleInput","error","undefined","buttonTwo","Button","color","onClick","isLoading","Dimmer","active","inverted","Loader","_this3","_this$state","buttonOne","buttonTwoRender","Modal","open","modal","onClose","closeIcon","Menu","pointing","secondary","Item","Content","style","errorMessage","onSubmit","buttonSubmit","verifyPasswordRender","renderLoader","Component","connect","errors","message","auth","dispatch","body","JSON","stringify","axios","post","Content-Type","then","res","payload","data","catch","err","console","log","response","callAPI","get","concat","Logout","useDispatch","useSelector","user","useEffect","react_router_dom","to","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Authenticated","components_Logout","components_LoginModal","as","Link","minHeight","padding","children","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","vertical","visible","myPalettesMenuItemRender","Pusher","dimmed","Segment","textAlign","sideBarStyles","Container","Icon","position","loginRender","isAuthenticated","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","Visibility","once","onBottomPassed","onBottomPassedReverse","borderless","myPalettesRender","HeaderMenu","components_DesktopContainer","components_MobileContainer","LandingPageExample","Grid","columns","verticalAlign","Column","width","Header","LandingIcons","margin","Row","renderOneColorSet","set","map","index","backgroundColor","LandingPageExampleSets","exampleSets","FujiExample","MineralsExample","CameraExample","frontExample","computer","tablet","mobile","Image","src","SaveExample","reversed","centered","HowItWorks","stackable","href","rel","LandingPage","components_LandingPageExample","components_LandingIcons","components_LandingPageExampleSets","components_SaveExample","components_HowItWorks","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","sendColorInfo","hexColor","alpha","R","G","hexToG","B","hexToB","clearRecieved","status","sendPositionInfo","clearPosition","sendSelectedColor","selectedColor","sendAlphaInfo","EditModalColorInfo","_this$props","hexInput","hexColorOnChange","handleChange","colorInfo","colors","EditModal","title","selectedSet","colorPalette","newColor","hex","toUpperCase","rgb","closeConfigShow","dimmer","colorPosition","openEdit","cancel","closeEdit","handleConfirm","UpdateData","updateColorPalette","objectID","react_color_es","marginRight","r","g","b","onChangeComplete","handleOnClickSquare","opacity","cursor","renderCarot","newHexColor","trim","label","handleTitleInput","renderColorPicker","components_EditModalColorInfo","Actions","myPalettes","Data","id","colorSet","put","ConfirmDelete","deleteColorPalette","content","deleteColor","DeleteColor","delete","DropdownExampleIcon","Dropdown","simple","icon","components_EditModal","ConfirmDeleteModal","MyPallettes","getColors","prevProps","palette","_id","EllipseMenu","url","renderPalettes","addColor","AddColor","updateColor","UpdateColor","loading","Footer","Clarifai","app","App","apiKey","analyzeImage","models","predict","hexColors","outputs","push","raw_hex","slice","fetch","json","RGBtoHexData","colorMindResponse","i","loader","errorData","details","changeMainImage","ColorsList","renderColor","height","renderLoaderHeight","colorsRender","ImageMain","alt","AddImgModal","input","closeImgModal","clearErrorStatus","clearImgSubmit","closeOnEscape","closeOnDimmerClick","openImgModal","sendErrorStatus","checkForDuplicateUrls","newImgSubmit","showModalLoader","exampleImages","image","addImageSelection","submitURL","_this4","renderURLinput","renderSubmitButton","renderErrorMessage","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","deleteURL","renderImages","ImageModal","ColorPicker","updateHexColor","newColorSet","ColorInfo","defaultValue","readOnly","Regenerate","SavePalette","placeHolder","newColorPalette","setError","marginLeft","handleConfirmClick","renderConfirmButton","Generate","celled","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorPicker","components_ColorInfo","components_Regenerate","components_SavePalette","Popup","trigger","basic","lib_default","debug","components_HeaderMenu","react_router","path","exact","component","components_Footer","initialState","combineReducers","arguments","action","objectSpread","array","item","updateObjectInArray","newImageList","filter","msg","setItem","removeItem","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ae7e2476.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FujiExample.647af6bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/CameraExample.d7b0995e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/example_14.6c9a610d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/example_13.29c96b79.jpg\";","module.exports = {\n  clarifaiID: 'f693b0056df946fcbab8560a908a30ca'\n}\n","import axios from \"axios\";\n\n// Check token & load user\nexport const loadUser = () => dispatch => {\n  // User loading\n  dispatch({ type: \"USER_LOADING\" });\n\n  axios\n    .get(\"/api/auth/user\", tokenConfig())\n    .then(res =>\n      dispatch({\n        type: \"USER_LOADED\",\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err.response\n      });\n      dispatch({\n        type: \"AUTH_ERROR\"\n      });\n    });\n};\n\n// Register User\nexport const registerUser = (email, password) => dispatch => {\n  // Show loading bubble in user register\n  dispatch({ type: \"USER_LOADING\" });\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/api/users\", body, config)\n    .then(res =>\n      dispatch({\n        type: \"REGISTER_SUCCESS\",\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log(\"register fail!\");\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err.response\n      });\n      dispatch({\n        type: \"REGISTER_FAIL\"\n      });\n    });\n};\n\n// Login User\nexport const loginUser = (email, password) => dispatch => {\n  // Show loading bubble in login\n  dispatch({ type: \"USER_LOADING\" });\n\n  // headers\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/api/auth\", body, config)\n    .then(res =>\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      console.log(\"login fail!\");\n      dispatch({\n        type: \"GET_ERRORS\",\n        payload: err.response\n      });\n      dispatch({\n        type: \"LOGIN_FAIL\"\n      });\n    });\n};\n\n// Logout User\nexport const logoutUser = () => {\n  return {\n    type: \"LOGOUT_SUCCESS\"\n  };\n};\n\n// Set up local storage for tokens\nexport const tokenConfig = () => {\n  // Get token from localstorage\n  const token = localStorage.getItem(\"token\");\n\n  // Headers\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n};\n\n// Modal Actions\nexport const openModal = () => {\n  return {\n    type: \"OPEN_MODAL\"\n  };\n};\n\nexport const closeModal = () => {\n  return {\n    type: \"CLOSE_MODAL\"\n  };\n};\n\n// Logout User\nexport const clearErrors = () => {\n  return {\n    type: \"CLEAR_ERRORS\"\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../actions/authActions\";\nimport { loginUser } from \"../actions/authActions\";\nimport { openModal } from \"../actions/authActions\";\nimport { closeModal } from \"../actions/authActions\";\nimport { clearErrors } from \"../actions/authActions\";\nimport \"./css/loginModal.css\";\nimport { Button, Modal, Input, Menu, Dimmer, Loader } from \"semantic-ui-react\";\n\nconst Isemail = require(\"isemail\");\n//possibly split into two components login and sign up\nclass LoginModal extends Component {\n  state = {\n    activeItem: \"Log In\",\n    header: \"Log In to Color Pic\",\n    button: \"Log In\",\n    verifyPassword: \"\",\n    email: \"\",\n    userNamePlaceHolder: \"\",\n    passWordPlaceHolder: \"\",\n    description: \"\",\n    errorStatusPassword: false,\n    errorMsgPassword: \"\",\n    errorStatusEmail: false,\n    errorMsgEmail: \"\"\n  };\n\n  showLogin = size => () => {\n    this.setState({\n      activeItem: \"Log In\",\n      header: \"Log In to Color Pic\",\n      button: \"Log In\",\n      userNamePlaceHolder: \"Demo Email: demo@demo.com\",\n      passWordPlaceHolder: \"Demo Password: demo\",\n      description: \"\"\n    });\n    this.props.openModal();\n    this.props.clearErrors();\n  };\n\n  showSignup = size => () => {\n    this.setState({\n      activeItem: \"Sign Up\",\n      header: \"Join Color Pic\",\n      button: \"Sign Up\",\n      userNamePlaceHolder: \"Register new user\",\n      passWordPlaceHolder: \"Password\",\n      description: \"Register to access more features\"\n    });\n    this.props.openModal();\n    this.props.clearErrors();\n  };\n\n  close = () => {\n    this.resetDefaults();\n    // clear all inputs when modal closes\n    this.setState({\n      username: \"\",\n      password: \"\",\n      verifyPassword: \"\",\n      email: \"\"\n    });\n    this.props.closeModal();\n    this.props.clearErrors();\n  };\n\n  handleLogInClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: \"Log In to Color Pic\",\n      username: \"\",\n      password: \"\",\n      verifyPassword: \"\",\n      email: \"\",\n      userNamePlaceHolder: \"Demo Email: demo@demo.com\",\n      passWordPlaceHolder: \"Demo Password: demo\",\n      description: \"\"\n    });\n    this.resetDefaults();\n    this.props.clearErrors();\n  };\n\n  handleSignUpClick = (e, { name }) => {\n    this.setState({\n      activeItem: name,\n      button: name,\n      header: \"Join Color Pic Today\",\n      username: \"\",\n      password: \"\",\n      verifyPassword: \"\",\n      email: \"\",\n      userNamePlaceHolder: \"Register New User\",\n      passWordPlaceHolder: \"Password\",\n      description: \"Register to access more features\"\n    });\n    this.resetDefaults();\n    this.props.clearErrors();\n  };\n\n  // clear all error messages\n  resetDefaults() {\n    this.setState({\n      errorStatusPassword: false,\n      errorStatusEmail: false,\n      errorMsgEmail: \"\",\n      errorMsgPassword: \"\"\n    });\n  }\n\n  handleInput(event, key) {\n    this.setState({ [key]: event.target.value });\n    this.resetDefaults();\n  }\n\n  buttonSubmit(event) {\n    event.preventDefault();\n    // If all fields are empty\n    if (\n      this.state.email === \"\" &&\n      this.state.password === \"\" &&\n      this.state.verifyPassword === \"\"\n    ) {\n      this.setState({\n        errorStatusEmail: true,\n        errorStatusPassword: true,\n        errorMsgEmail: \"Email cannot be empty\",\n        errorMsgPassword: \"Passwords cannot be empty\"\n      });\n      return;\n    }\n\n    // If email is empty\n    if (this.state.email === \"\") {\n      this.setState({\n        errorMsgEmail: \"Email cannot be empty\",\n        errorStatusEmail: true\n      });\n      return;\n    }\n\n    // If either password is empty on Sign Up\n    if (this.state.activeItem === \"Sign Up\" && this.state.password === \"\") {\n      this.setState({\n        errorMsgPassword: \"Password cannot be empty\",\n        errorStatusPassword: true\n      });\n      return;\n    }\n\n    // If Login Password is empty\n    if (this.state.activeItem === \"Log In\" && this.state.password === \"\") {\n      this.setState({\n        errorMsgPassword: \"Please enter password\",\n        errorStatusPassword: true\n      });\n      return;\n    }\n\n    // If passwords do not match show error message\n    if (\n      this.state.activeItem === \"Sign Up\" &&\n      this.state.password !== this.state.verifyPassword\n    ) {\n      this.setState({\n        errorMsgPassword: \"Passwords do not match\",\n        errorStatusPassword: true\n      });\n      return;\n    }\n\n    // Password should be at least 6 chars\n    if (this.state.activeItem === \"Sign Up\" && this.state.password.length < 6) {\n      this.setState({\n        errorStatusPassword: true,\n        errorMsgPassword: \"Passwords should be at least 6 characters\"\n      });\n      return;\n    }\n\n    // Validate Email\n    if (\n      this.state.activeItem === \"Sign Up\" &&\n      Isemail.validate(this.state.email) === false\n    ) {\n      this.setState({\n        errorStatusEmail: \"error\",\n        errorMsgEmail: \"Not a valid email\"\n      });\n      return;\n    }\n\n    // If Sign Up and No errors statuses\n    if (this.state.activeItem === \"Sign Up\") {\n      this.props.registerUser(this.state.email, this.state.password);\n    }\n\n    // If Log In and No errors statuses\n    if (this.state.activeItem === \"Log In\") {\n      this.props.loginUser(this.state.email, this.state.password);\n    }\n  }\n\n  // Only verifyPassword for Sign Up\n  verifyPasswordRender() {\n    if (this.state.activeItem === \"Sign Up\") {\n      return (\n        <div>\n          <label className=\"login-label\">Verify Password</label>\n          <Input\n            type=\"password\"\n            className=\"login-input\"\n            placeholder=\"Password\"\n            autoComplete=\"on\"\n            value={this.state.verifyPassword}\n            onChange={event => this.handleInput(event, \"verifyPassword\")}\n            error={this.state.errorStatusPassword}\n          />\n        </div>\n      );\n    }\n  }\n\n  buttonTwoRender() {\n    if (this.props.buttonTwo !== undefined) {\n      return (\n        <Button color=\"blue\" onClick={this.showSignup()} className=\"btn-two\">\n          {this.props.buttonTwo}\n        </Button>\n      );\n    }\n  }\n\n  renderLoader() {\n    if (this.props.isLoading === true) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"big\" inverted />\n        </Dimmer>\n      );\n    }\n  }\n\n  render() {\n    const {\n      activeItem,\n      button,\n      header,\n      email,\n      password,\n      userNamePlaceHolder,\n      passWordPlaceHolder,\n      errorStatusPassword,\n      errorStatusEmail,\n      description,\n      errorMsgEmail\n    } = this.state;\n\n    return (\n      <div>\n        <Button className=\"login-btn-menu\" onClick={this.showLogin()}>\n          {this.props.buttonOne}\n        </Button>\n        {this.buttonTwoRender()}\n        <Modal\n          size=\"tiny\"\n          open={this.props.modal}\n          onClose={this.close}\n          closeIcon\n        >\n          <div className=\"login-header\">\n            <h2>{header}</h2>\n          </div>\n          <Menu className=\"menu-overide\" pointing secondary>\n            <Menu.Item\n              name=\"Log In\"\n              active={activeItem === \"Log In\"}\n              onClick={this.handleLogInClick}\n            />\n            <Menu.Item\n              name=\"Sign Up\"\n              active={activeItem === \"Sign Up\"}\n              onClick={this.handleSignUpClick}\n            />\n          </Menu>\n          <Modal.Content>\n            <div className=\"login-description\">\n              <h5>{description}</h5>\n              <h5 style={{ color: \"red\" }}>{this.props.errorMessage}</h5>\n            </div>\n            <form onSubmit={event => this.buttonSubmit(event)}>\n              <label className=\"login-label\">Email</label>\n              <Input\n                className=\"login-input\"\n                placeholder={userNamePlaceHolder}\n                value={email}\n                autoComplete=\"on\"\n                onChange={event => this.handleInput(event, \"email\")}\n                error={errorStatusEmail}\n              />\n              <p style={{ color: \"red\" }}>{errorMsgEmail}</p>\n              <label className=\"login-label\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"login-input\"\n                placeholder={passWordPlaceHolder}\n                autoComplete=\"on\"\n                value={password}\n                onChange={event => this.handleInput(event, \"password\")}\n                error={errorStatusPassword}\n              />\n              <p style={{ color: \"red\" }}>{this.state.errorMsgPassword}</p>\n              {this.verifyPasswordRender()}\n              <Button\n                className=\"login-btn\"\n                color=\"blue\"\n                onClick={event => this.buttonSubmit(event)}\n              >\n                {button}\n              </Button>\n            </form>\n            {this.renderLoader()}\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    errorMessage: state.errors.message,\n    modal: state.auth.modal,\n    isLoading: state.auth.isLoading\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    registerUser,\n    loginUser,\n    openModal,\n    closeModal,\n    clearErrors\n  }\n)(LoginModal);\n","import axios from \"axios\";\nimport { tokenConfig } from \"./authActions\";\n\nconst callAPI = (email, dispatch) => {\n  // Data Loading\n  dispatch({ type: \"COLORS_LOADING\" });\n\n  axios\n    .get(`/api/colors/${email}`)\n    .then(res =>\n      dispatch({\n        type: \"GET_COLORS\",\n        payload: res.data\n      })\n    )\n    .catch(error => console.log(error));\n};\n\n// Get user color palettes\nexport const getColors = email => dispatch => {\n  callAPI(email, dispatch);\n};\n\n// Add color palettes\nexport const newColorPalette = (colorSet, email) => dispatch => {\n  axios\n    .post(\"/api/colors\", colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: \"ADD_COLORS\",\n        payload: res.data\n      })\n    )\n    .catch(error => {\n      console.log(error);\n    })\n    .then(() => {\n      callAPI(email, dispatch);\n    });\n};\n\n// Update color palettes\nexport const updateColorPalette = (id, colorSet, email) => dispatch => {\n  axios\n    .put(`/api/colors/${id}`, colorSet, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: \"UPDATE_COLORS\",\n        payload: colorSet\n      })\n    )\n    .catch(error => {\n      console.log(error);\n    })\n    .then(() => {\n      callAPI(email, dispatch);\n    });\n};\n\n// Delete user color palettes\nexport const deleteColorPalette = id => dispatch => {\n  axios\n    .delete(`/api/colors/${id}`, tokenConfig())\n    .then(res =>\n      dispatch({\n        type: \"DELETE_COLORS\",\n        payload: id\n      })\n    )\n    .catch(error => console.log(error));\n};\n\n// Clear Colors\nexport const clearColors = () => {\n  return {\n    type: \"CLEAR_PALETTE_COLORS\"\n  };\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { logoutUser } from \"../actions/authActions\";\nimport { clearColors } from \"../actions/MyPaletteAPI\";\nimport \"./css/logout.css\";\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n  const email = useSelector(state => state.auth.user.email)\n  \n  useEffect(() => {\n    // If token expired log out user\n    if (email === undefined) {\n      dispatch(logoutUser());\n    }\n  }, [email]);\n\n  const logout = () => {\n    dispatch(logoutUser());\n    dispatch(clearColors());\n  }\n\n  return (\n    <div>\n      <p className=\"username\">Welcome! {email}</p>\n      <Link to=\"/\">\n        <Button color=\"blue\" className=\"logout-btn\" onClick={() => logout()}>\n          Log Out\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nexport default Logout;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport LoginModal from \"./LoginModal\";\nimport Logout from \"./Logout\";\nimport { logoutUser } from \"../actions/authActions\";\nimport {\n  Container,\n  Icon,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar\n} from \"semantic-ui-react\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nclass MobileContainer extends Component {\n  state = {};\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\n      );\n    }\n  }\n\n  myPalettesMenuItemRender() {\n    if (this.props.Authenticated === true) {\n      return (\n        <Menu.Item as={Link} to=\"/MyPallettes\">\n          My Palettes\n        </Menu.Item>\n      );\n    }\n  }\n\n  sideBarStyles() {\n    if (this.props.Authenticated === true) {\n      return { minHeight: 122, padding: \"1em 0em\" };\n    } else {\n      return { minHeight: 82, padding: \"0em 0em\" };\n    }\n  }\n  render() {\n    const { children } = this.props;\n    const { sidebarOpened } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation=\"push\"\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          <Menu.Item as={Link} to=\"/\">\n            Color Pic\n          </Menu.Item>\n          <Menu.Item as={Link} to=\"/Generate\">\n            Generate\n          </Menu.Item>\n          {this.myPalettesMenuItemRender()}\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment textAlign=\"center\" style={this.sideBarStyles()} vertical>\n            <Container>\n              <Menu pointing secondary size=\"large\">\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name=\"sidebar\" />\n                </Menu.Item>\n                <Menu.Item position=\"right\">{this.loginRender()}</Menu.Item>\n              </Menu>\n            </Container>\n          </Segment>\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(MobileContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport LoginModal from \"./LoginModal\";\nimport Logout from \"./Logout\";\nimport { logoutUser } from \"../actions/authActions\";\nimport {\n  Menu,\n  Responsive,\n  Segment,\n  Visibility,\n  Dimmer,\n  Loader,\n  Container\n} from \"semantic-ui-react\";\n\nconst getWidth = () => {\n  const isSSR = typeof window === \"undefined\";\n\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\n};\n\nclass DesktopContainer extends Component {\n  state = {};\n\n  hideFixedMenu = () => {\n    this.setState({ fixed: false });\n  };\n  showFixedMenu = () => {\n    this.setState({ fixed: true });\n  };\n\n  loginRender() {\n    if (this.props.Authenticated === true) {\n      return <Logout />;\n    } else {\n      return (\n        // Pass down button name depending on modal is used\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\n      );\n    }\n  }\n\n  myPalettesRender() {\n    if (this.props.Authenticated === true) {\n      return (\n        <Menu.Item as={Link} to=\"/MyPallettes\">\n          <h5>My Palettes</h5>\n        </Menu.Item>\n      );\n    }\n  }\n\n  renderLoader() {\n    if (this.props.isLoading === true) {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"small\" inverted />\n        </Dimmer>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment className=\"menu-container\" textAlign=\"center\" vertical>\n            <Menu className=\"menu-small\" size=\"small\" borderless>\n              <Container>\n                <Menu.Item as={Link} to=\"/\">\n                  <h5>Color Pic</h5>\n                </Menu.Item>\n                <Menu.Item as={Link} to=\"/Generate\">\n                  <h5>Generate</h5>\n                </Menu.Item>\n                {this.myPalettesRender()}\n                <Menu.Item position=\"right\">\n                  {this.loginRender()}\n                  {this.renderLoader()}\n                </Menu.Item>\n              </Container>\n            </Menu>\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    Authenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(DesktopContainer);\n","import React from \"react\";\nimport MobileContainer from \"./MobileContainer\";\nimport DesktopContainer from \"./DesktopContainer\";\nimport \"./css/headerMenu.css\";\n\nconst HeaderMenu = ({ children }) => (\n  <div>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </div>\n);\n\nexport default HeaderMenu;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./css/landingPage.css\";\nimport { Grid, Segment, Header, Button } from \"semantic-ui-react\";\n\nconst LandingPageExample = () => {\n  return (\n    <div className=\"dark-landing\">\n      <Grid columns={1} verticalAlign=\"middle\" className=\"grid-size\">\n        <Grid.Column width={16} textAlign=\"center\">\n          <Segment className=\"dark-landing\">\n            <Header as=\"h1\" className=\"landing-header\">\n              Fast and Efficient color palettes generator\n            </Header>\n            <p className=\"text-style\">Create, edit, and save schemes</p>\n            <Link to=\"/Generate\">\n              <Button color=\"blue\" className=\"landing-btn\">\n                Start Generator\n              </Button>\n            </Link>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default LandingPageExample;\n","import React from \"react\";\nimport { Icon, Grid } from \"semantic-ui-react\";\n\nconst LandingIcons = () => {\n  return (\n    <Grid columns={3} style={{ margin: \"4em 0em\" }}>\n      <Grid.Row>\n        <Grid.Column textAlign=\"center\">\n          <Icon name=\"image outline\" size=\"huge\" />\n          <h3>Capture colors from Images</h3>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <Icon name=\"adjust\" size=\"huge\" />\n          <h3>Adjust colors and refine palette</h3>\n        </Grid.Column>\n        <Grid.Column textAlign=\"center\">\n          <Icon name=\"save\" size=\"huge\" />\n          <h3>Save palettes for future reference</h3>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default LandingIcons;\n","import React from \"react\";\nimport FujiExample from \"../images/FujiExample.jpg\";\nimport CameraExample from \"../images/CameraExample.jpg\";\nimport frontExample from \"../images/example_14.jpg\";\nimport MineralsExample from \"../images/example_13.jpg\";\nimport { Grid, Image } from \"semantic-ui-react\";\n\nconst renderOneColorSet = set => {\n  let colorSet = set.map((color, index) => (\n    <div className=\"color-square-container\" key={color + index}>\n      <div className=\"color-square\" style={{ backgroundColor: color }} />\n    </div>\n  ));\n  return colorSet;\n};\n\nconst LandingPageExampleSets = () => {\n  const exampleSets = [\n    { FujiExample: [\"#ECE3E0\", \"#252C32\", \"#6A707E\", \"#53262E\", \"#B81F34\"] },\n    { MineralsExample: [\"#C0B9B4\", \"#84624D\", \"#BB7A61\", \"#B06C83\", \"#0E5F6C\"] },\n    { CameraExample: [\"#26221A\", \"#3D464F\", \"#96BBDC\", \"#74AACB\", \"#867D80\"] },\n    { frontExample: [\"#804C27\", \"#F7AC49\", \"#CD6622\", \"#7A2717\", \"#2C2022\"]}\n  ];\n\n  return (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column\n          className=\"column-overide-left\"\n          computer={4}\n          tablet={4}\n          mobile={8}\n        >\n          <Image src={FujiExample} />\n          {renderOneColorSet(exampleSets[0].FujiExample)}\n        </Grid.Column>\n        <Grid.Column\n          className=\"column-overide-right\"\n          computer={4}\n          tablet={4}\n          mobile={8}\n        >\n          <Image src={MineralsExample} />\n          {renderOneColorSet(exampleSets[1].MineralsExample)}\n        </Grid.Column>\n        <Grid.Column\n          className=\"column-overide-left\"\n          computer={4}\n          tablet={4}\n          mobile={8}\n        >\n          <Image src={CameraExample} />\n          {renderOneColorSet(exampleSets[2].CameraExample)}\n        </Grid.Column>\n        <Grid.Column\n          className=\"column-overide-right\"\n          computer={4}\n          tablet={4}\n          mobile={8}\n        >\n          <Image src={frontExample} />\n          {renderOneColorSet(exampleSets[3].frontExample)}\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default LandingPageExampleSets;\n","import React from \"react\";\nimport { Grid,Header } from \"semantic-ui-react\";\n\nconst SaveExample = () => {\n  return (\n    <div className=\"save-example-container\">\n      <Grid reversed=\"tablet computer\" verticalAlign=\"middle\" centered>\n        <Grid.Row>\n          <Grid.Column computer={4} tablet={5} mobile={16}>\n            <Header as=\"h1\" className=\"save-header\" textAlign=\"center\">\n              Create Your Own Gallery\n            </Header>\n          </Grid.Column>\n          <Grid.Column\n            className=\"save-example-img\"\n            computer={12}\n            tablet={11}\n            mobile={16}\n          >\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nexport default SaveExample;\n","import React from \"react\";\nimport { Header, Grid } from \"semantic-ui-react\";\nimport \"./css/landingPage.css\";\n\nconst HowItWorks = () => {\n  return (\n    <Grid stackable columns={2} verticalAlign=\"middle\" centered>\n      <Grid.Row className=\"explanation-container\">\n        <Grid.Column textAlign=\"center\" computer={5} tablet={6} mobile={16}>\n          <Header as=\"h1\" className=\"explanation-header\" textAlign=\"center\">\n            How it Works\n          </Header>\n        </Grid.Column>\n        <Grid.Column computer={11} tablet={10} mobile={16}>\n          <p className=\"explanation-text\">\n            The Color Pic application uses image recognition from{\" \"}\n            <a\n              href=\"https://www.clarifai.com/models/color-image-recognition-model-eeed0b6733a644cea07cf4c60f87ebb7\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Clarifai\n            </a>{\" \"}\n            to predict what the dominant colors are in a given picture. The\n            colors are then sent to{\" \"}\n            <a\n              href=\"http://colormind.io/blog/extracting-colors-from-photos-and-video/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Colormind\n            </a>{\" \"}\n            to generate a suggested color palette, it searches for colors that\n            work well together. This works in a semi-random way, so hit\n            regenerate to see a different color set each time.\n          </p>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default HowItWorks;\n","import React from \"react\";\nimport LandingPageExample from \"./LandingPageExample\";\nimport LandingIcons from \"./LandingIcons\";\nimport LandingPageExampleSets from \"./LandingPageExampleSets\";\nimport SaveExample from \"./SaveExample\";\nimport HowItWorks from \"./HowItWorks\";\nimport { Container } from \"semantic-ui-react\";\nimport \"./css/landingPage.css\";\n\nconst LandingPage = () => {\n  return (\n    <div>\n      <div className=\"dark-landing\">\n        <Container>\n          <LandingPageExample />\n        </Container>\n      </div>\n      <Container>\n        <LandingIcons />\n        <LandingPageExampleSets />\n        <SaveExample />\n        <HowItWorks />\n      </Container>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","// Convert Hex to RGB functions\nexport const hexToR = h => {\n  return parseInt(cutHex(h).substring(0, 2), 16);\n};\n\nexport const hexToG = h => {\n  return parseInt(cutHex(h).substring(2, 4), 16);\n};\n\nexport const hexToB = h => {\n  return parseInt(cutHex(h).substring(4, 6), 16);\n};\n\nconst cutHex = h => {\n  return h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n};\n\n// Convert RGB to Hex functions\nexport const rgbToHex = (R, G, B) => {\n  return \"#\" + toHex(R) + toHex(G) + toHex(B);\n};\n\nexport const toHex = n => {\n  n = parseInt(n, 10);\n  if (isNaN(n)) return \"00\";\n  n = Math.max(0, Math.min(n, 255));\n  return (\n    \"0123456789ABCDEF\".charAt((n - (n % 16)) / 16) +\n    \"0123456789ABCDEF\".charAt(n % 16)\n  );\n};\n","import { hexToR } from \"./convertRGB\";\nimport { hexToG } from \"./convertRGB\";\nimport { hexToB } from \"./convertRGB\";\n\n// Color info Actions\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\n  let R = hexToR(hexColor);\n  let G = hexToG(hexColor);\n  let B = hexToB(hexColor);\n  dispatch({\n    type: \"SEND_COLOR_INFO\",\n    hexColor: hexColor,\n    R: R,\n    G: G,\n    B: B,\n    alpha: alpha\n  });\n};\n\nexport const clearRecieved = () => dispatch => {\n  dispatch({\n    type: \"CLEAR_RECIEVED\",\n    status: \"\"\n  });\n};\n\nexport const sendPositionInfo = position => dispatch => {\n  dispatch({\n    type: \"SEND_POSITION_INFO\",\n    position: position\n  });\n};\n\nexport const clearPosition = () => dispatch => {\n  dispatch({\n    type: \"CLEAR_POSITION_INFO\",\n    position: 0\n  });\n};\n\nexport const sendSelectedColor = color => dispatch => {\n  dispatch({\n    type: \"SELECTED_COLOR\",\n    selectedColor: color\n  });\n};\n\nexport const sendAlphaInfo = alpha => dispatch => {\n  dispatch({\n    type: \"SEND_ALPHA_INFO\",\n    alpha: alpha\n  });\n};\n\nexport const updateHexColor = newColorSet => dispatch => {\n  dispatch({\n    type: \"UPDATE_HEX_COLOR\",\n    newColorSet: newColorSet\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass EditModalColorInfo extends Component {\n  handleChange(event) {\n    console.log(event.target.value);\n  }\n\n  render() {\n    const { hexInput, R, G, B, alpha } = this.props;\n\n    return (\n      <div className=\"color-info\">\n        <h5>Hex</h5>\n        <input\n          className=\"hex-info-input\"\n          value={hexInput}\n          onChange={event => this.props.hexColorOnChange(event)}\n        />\n        <p className=\"info-text\">R</p>\n        <p className=\"info-text\">G</p>\n        <p className=\"info-text\">B</p>\n        <p className=\"info-text\">a</p>\n        <div>\n          <input\n            className=\"info-input\"\n            value={R}\n            onChange={event => this.handleChange(event)}\n          />\n          <input\n            className=\"info-input\"\n            value={G}\n            onChange={event => this.handleChange(event)}\n          />\n          <input\n            className=\"info-input\"\n            value={B}\n            onChange={event => this.handleChange(event)}\n          />\n          <input\n            className=\"info-input\"\n            value={alpha}\n            onChange={event => this.handleChange(event)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(EditModalColorInfo);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ChromePicker } from \"react-color\";\nimport { updateColorPalette } from \"../actions/MyPaletteAPI\";\nimport { sendPositionInfo } from \"../actions/colorInfoActions\";\nimport { sendSelectedColor } from \"../actions/colorInfoActions\";\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\nimport { clearPosition } from \"../actions/colorInfoActions\";\nimport { sendAlphaInfo } from \"../actions/colorInfoActions\";\nimport EditModalColorInfo from \"./EditModalColorInfo\";\nimport { Button, Modal, Icon, Input, Grid, Segment } from \"semantic-ui-react\";\nimport \"./css/myPalettes.css\";\n\nclass EditModal extends Component {\n  state = {\n    title: \"\",\n    selectedSet: [],\n    hexInput: \"\"\n  };\n\n  componentDidMount() {\n    // send info to local state when modal opens\n    const position = this.props.colorPosition;\n    this.setState({\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n  }\n\n  handleTitleInput(event) {\n    this.setState({ title: event.target.value });\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.setState({ hexInput: color });\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  handleChange = color => {\n    let colorPalette = this.state.selectedSet;\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n    // update new item in color array\n    colorPalette[this.props.position] = newColor;\n    // // set new color square in local state\n    this.setState({\n      selectedSet: colorPalette,\n      hexInput: color.hex.toUpperCase()\n    });\n    // update color info in display\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  };\n\n  renderColorPicker() {\n    return (\n      <ChromePicker\n        className=\"chrome-picker-edit\"\n        style={{ marginRight: 4 + \"em\" }}\n        color={{\n          r: this.props.R,\n          g: this.props.G,\n          b: this.props.B,\n          a: this.props.alpha\n        }}\n        onChangeComplete={this.handleChange}\n      />\n    );\n  }\n\n  renderOneColorSet() {\n    const colorSet = this.state.selectedSet.map((color, index) => (\n      <div className=\"color-square-container\" key={color.hexColor + index}>\n        <div\n          className=\"color-square\"\n          onClick={() =>\n            this.handleOnClickSquare(color.hexColor, index, color.alpha)\n          }\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha,\n            cursor: \"pointer\"\n          }}\n        />\n        <div style={this.renderCarot(index)} className=\"carot-container\">\n          <Icon size=\"big\" name=\"caret up\" />\n        </div>\n      </div>\n    ));\n    return colorSet;\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: \"black\"\n      };\n    } else {\n      return {\n        color: \"white\"\n      };\n    }\n  }\n\n  hexColorOnChange(event) {\n    // only use upper case and trim white space\n    const newHexColor = event.target.value.toUpperCase().trim();\n    // Do not update state if more than 7 total characters\n    if (newHexColor.length <= 7) {\n      this.setState({\n        hexInput: newHexColor\n      });\n    }\n    //if hexcolor has all 7 characters and includes # as the first character\n    if (newHexColor.length === 7 && newHexColor[0] === \"#\") {\n      let colorPalette = this.props.selectedSet;\n      let newColor = {\n        hexColor: newHexColor,\n        alpha: this.props.a\n      };\n      // update new item in color array\n      colorPalette[this.props.position] = newColor;\n      // update color info in display\n      this.props.sendColorInfo(newHexColor);\n      this.props.sendSelectedColor(newHexColor);\n      this.props.sendAlphaInfo(this.props.a);\n    }\n  }\n\n  closeConfigShow = dimmer => () => {\n    const position = this.props.colorPosition;\n    this.setState({\n      dimmer,\n      // send info to local state when modal opens\n      title: this.props.data[position].title,\n      selectedSet: this.props.data[position].colors,\n      hexInput: this.props.data[position].colors[0].hexColor\n    });\n    // send color info for first square when model opens\n    this.props.sendColorInfo(\n      this.props.data[position].colors[0].hexColor,\n      this.props.data[position].colors[0].alpha\n    );\n    //open state moved to parent component\n    this.props.openEdit();\n  };\n\n  cancel = () => {\n    // set original info when modal is canceled\n    const position = this.props.colorPosition;\n    this.setState({\n      title: this.props.data[position].title,\n      hexInput: this.props.data[position].colors[0].hexColor,\n      selectedSet: this.props.data[position].colors\n    });\n    //open state moved to parent component\n    this.props.closeEdit();\n    this.props.clearPosition();\n  };\n\n  handleConfirm = () => {\n    const UpdateData = {\n      title: this.state.title,\n      colors: this.state.selectedSet\n    };\n    this.props.updateColorPalette(\n      this.props.objectID,\n      UpdateData,\n      this.props.email\n    );\n    this.props.clearPosition();\n    this.props.closeEdit();\n  };\n\n  render() {\n    const { dimmer, title, hexInput, selectedSet } = this.state;\n    return (\n      <div className=\"edit-modal edit-icon-div\">\n        <Icon\n          className=\"edit-icon\"\n          onClick={this.closeConfigShow(true)}\n          name=\"edit\"\n        />\n        <p className=\"edit-text\">Edit</p>\n        <Modal\n          open={this.props.open}\n          //Dimmer not currently working\n          dimmer={dimmer}\n          onClose={this.close}\n        >\n          <Modal.Content>\n            <Input\n              className=\"modal-input\"\n              label=\"Title\"\n              value={title}\n              onChange={event => this.handleTitleInput(event)}\n              placeholder=\"Edit Palette Name...\"\n            />\n            <div>{this.renderOneColorSet()}</div>\n            <Grid textAlign=\"center\" stackable columns={2}>\n              <Grid.Column computer={10} tablet={9}>\n                <Segment>{this.renderColorPicker()}</Segment>\n              </Grid.Column>\n              <Grid.Column computer={6} tablet={7}>\n                <Segment>\n                  <EditModalColorInfo\n                    hexInput={hexInput}\n                    hexColorOnChange={event => this.hexColorOnChange(event)}\n                    selectedSet={selectedSet}\n                  />\n                </Segment>\n              </Grid.Column>\n            </Grid>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.cancel}>Cancel</Button>\n            <Button onClick={this.handleConfirm} color=\"blue\">\n              Confirm\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data,\n    position: state.colorInfo.position,\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    alpha: state.colorInfo.alpha,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateColorPalette,\n    sendPositionInfo,\n    sendSelectedColor,\n    sendColorInfo,\n    sendAlphaInfo,\n    clearPosition\n  }\n)(EditModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Modal, Button } from \"semantic-ui-react\";\nimport { deleteColorPalette } from \"../actions/MyPaletteAPI\";\nimport \"./css/confirmDeleteModal.css\";\n\nclass ConfirmDelete extends Component {\n  handleConfirm = () => {\n    this.props.deleteColorPalette(this.props.objectID, this.props.token);\n    this.props.close();\n  };\n\n  render() {\n    return (\n      <div>\n        <p onClick={this.props.openModal}>\n          <Icon name=\"trash\" />\n          Delete\n        </p>\n        <Modal size=\"tiny\" open={this.props.open} onClose={this.props.close}>\n          <Modal.Content>\n            <p>{`Are you sure you want to delete ${\n              this.props.title\n            } palette?`}</p>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={this.props.close}>Cancel</Button>\n            <Button\n              onClick={this.handleConfirm}\n              color=\"blue\"\n              content=\"Confirm\"\n            />\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    deleteColor: state.myPalettes.DeleteColor,\n    token: state.auth.token\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { deleteColorPalette }\n)(ConfirmDelete);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\nimport EditModal from \"./EditModal\";\nimport ConfirmDeleteModal from \"./ConfirmDeleteModal\";\nimport { Dropdown, Menu } from \"semantic-ui-react\";\n\nclass DropdownExampleIcon extends Component {\n  state = {\n    open: false,\n    openEdit: false\n  };\n\n  openModal() {\n    // Default padding cannot be overriden easily, closes dropdown by default\n    // Set dropdown item onClick open just in case user clicks edges\n    // Only set to true if open state is already false i.e closed\n    if (this.state.open === true) {\n      return;\n    } else {\n      this.setState({ open: true });\n    }\n  }\n\n  closeModal() {\n    this.setState({ open: false });\n  }\n\n  openEdit() {\n    if (this.state.openEdit === true) {\n      return;\n    } else {\n      // send color info for first square when model opens\n      const position = this.props.colorPosition;\n      this.props.sendColorInfo(\n        this.props.data[position].colors[0].hexColor,\n        this.props.data[position].colors[0].alpha\n      );\n      this.setState({ openEdit: true });\n    }\n  }\n\n  closeEdit() {\n    this.setState({ openEdit: false });\n  }\n\n  render() {\n    return (\n      <Menu className=\"menu-parent\">\n        <Menu.Menu position=\"right\">\n          <Dropdown\n            simple\n            className=\"icon menu-styles\"\n            icon=\"ellipsis vertical\"\n          >\n            <Dropdown.Menu>\n              <Dropdown.Item onClick={() => this.openEdit()}>\n                <EditModal\n                  open={this.state.openEdit}\n                  openEdit={() => this.openEdit()}\n                  closeEdit={() => this.closeEdit()}\n                  title={this.props.title}\n                  objectID={this.props.objectID}\n                  colorPosition={this.props.colorPosition}\n                  selectedSet={this.props.selectedSet}\n                />\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => this.openModal()}>\n                <ConfirmDeleteModal\n                  title={this.props.title}\n                  objectID={this.props.objectID}\n                  open={this.state.open}\n                  openModal={() => this.openModal()}\n                  close={() => this.closeModal()}\n                />\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.myPalettes.Data\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { sendColorInfo }\n)(DropdownExampleIcon);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getColors } from \"../actions/MyPaletteAPI\";\nimport { logoutUser } from \"../actions/authActions\";\nimport EllipseMenu from \"./EllipseMenu\";\nimport { Header, Container, Grid, Image } from \"semantic-ui-react\";\nimport \"./css/myPalettes.css\";\n\nclass MyPallettes extends Component {\n  componentDidMount() {\n    this.props.getColors(this.props.email);\n  }\n\n  componentDidUpdate(prevProps) {\n    // Email isn't always loaded right when component is mounted\n    if (this.props.email !== prevProps.email && this.props.email !== undefined) {\n      this.props.getColors(this.props.email);\n    }\n  }\n\n  // Renders one set of 5 colors then insert into renderPalettes()\n  renderOneColorSet(colors) {\n    const colorSet = colors.map((color, index) => (\n      <div\n        className=\"color-square-container column\"\n        key={color.hexColor + index}\n      >\n        <div\n          className=\"color-square\"\n          style={{ backgroundColor: color.hexColor, opacity: color.alpha }}\n        />\n      </div>\n    ));\n    return <div style={{ margin: \"0px auto\" }}>{colorSet}</div>;\n  }\n\n  renderPalettes() {\n    if (this.props.myPalettes !== undefined) {\n      const Palettes = this.props.myPalettes.map((palette, index) => (\n        <Grid.Column key={palette._id}>\n          <div className=\"palette-container\">\n            <h5 className=\"image-header\">{palette.title}</h5>\n            <div className=\"ellipsisMenu\">\n              <EllipseMenu\n                title={palette.title}\n                objectID={palette._id}\n                colorPosition={index}\n                selectedSet={palette.colors}\n              />\n            </div>\n            <Image src={palette.url} centered />\n            {this.renderOneColorSet(palette.colors)}\n          </div>\n        </Grid.Column>\n      ));\n      return Palettes;\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Header as=\"h1\" className=\"palette-header\">\n          My Color Palettes\n        </Header>\n        <div className=\"ui container\">\n          <div className=\"ui three column doubling stackable masonry grid\">\n            {this.renderPalettes()}\n          </div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    myPalettes: state.myPalettes.Data,\n    addColor: state.myPalettes.AddColor,\n    updateColor: state.myPalettes.UpdateColor,\n    loading: state.myPalettes.loading,\n    email: state.auth.user.email\n  };\n};\n\nexport default connect(mapStateToProps,{ getColors, logoutUser })(MyPallettes);\n","import React from \"react\";\nimport { Icon, Container } from \"semantic-ui-react\";\nimport \"./css/landingPage.css\";\n\nconst Footer = ({ url }) => {\n  return (\n    <div>\n      <Container className=\"footer\">\n        <h5 className=\"footer-header\">© 2021</h5>\n        <div className=\"icon-container\">\n          <a\n            className=\"icon-div\"\n            href=\"https://github.com/NelsonBaileyIII/capstone-color-project\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon className=\"icon-div\" name=\"github\" size=\"big\" />\n          </a>\n          <a\n            className=\"icon-div\"\n            href=\"https://www.linkedin.com/in/nelsonbaileyiii/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon className=\"icon-div\" name=\"linkedin square\" size=\"big\" />\n          </a>\n          <a\n            className=\"icon-div\"\n            href=\"mailto:nelsonbiii@outlook.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Icon className=\"icon-div\" name=\"mail\" size=\"big\" />\n          </a>\n        </div>\n        <a\n          href=\"https://nelsonbiii.netlify.app/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <div className=\"portfolio-link\">Portfolio</div>\n        </a>\n      </Container>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { rgbToHex } from \"./convertRGB\";\nconst Clarifai = require(\"clarifai\");\nconst clarifaiID = require(\"../config/keys\").clarifaiID;\nconst app = new Clarifai.App({ apiKey: clarifaiID });\n\n// Califai API Call\nexport const analyzeImage = url => dispatch => {\n  // Show loading screen\n  dispatch({ type: \"CLARIFAI_REQUEST_WAITING\" });\n\n  app.models\n    .predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\n    .then(res => {\n      const hexColors = [];\n      // Create new array of hexcolors from response data\n      res.outputs[0].data.colors.map(color => {\n        return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\n      });\n      // send hexcolor data as data query to back end\n      fetch(\"/api/colormind?colors=\" + hexColors)\n        .then(res => res.json())\n        .then(res => {\n          let RGBtoHexData = [];\n          let colorMindResponse = res;\n          // create new array from response data with color palette and default alpha = 1\n          for (let i = 0; i < colorMindResponse.length; i++) {\n            RGBtoHexData.push({\n              hexColor: rgbToHex(\n                colorMindResponse[i][0],\n                colorMindResponse[i][1],\n                colorMindResponse[i][2]\n              ),\n              alpha: 1\n            });\n          }\n          dispatch({\n            type: \"ANALYZE_IMAGE\",\n            payload: RGBtoHexData,\n            status: \"recieved\",\n            error: false,\n            open: false,\n            loader: \"hide\"\n          });\n        });\n    })\n    .catch(err => {\n      console.log(err);\n      dispatch({\n        type: \"ANALYZE_IMAGE_ERROR\",\n        errorData: err.data.status.details,\n        error: true,\n        open: true,\n        loader: \"hide\"\n      });\n    });\n};\n\n// image modal Actions\nexport const openImgModal = () => {\n  return {\n    type: \"OPEN_IMAGE_MODAL\"\n  };\n};\n\nexport const closeImgModal = () => {\n  return {\n    type: \"CLOSE_IMAGE_MODAL\"\n  };\n};\n\nexport const newImgSubmit = () => {\n  return {\n    type: \"NEW_IMAGE_SUBMIT\"\n  };\n};\n\nexport const showModalLoader = () => {\n  return {\n    type: \"CLARIFAI_REQUEST_WAITING\"\n  };\n};\n\nexport const clearImgSubmit = () => {\n  return {\n    type: \"CLEAR_IMAGE_SUBMIT\"\n  };\n};\n\nexport const sendErrorStatus = () => {\n  return {\n    type: \"SEND_ERROR\"\n  };\n};\n\nexport const clearErrorStatus = () => {\n  return {\n    type: \"CLEAR_ERROR\"\n  };\n};\n\n// image submit actions\nexport const changeMainImage = url => {\n  return {\n    type: \"MAIN_IMAGE\",\n    url: url\n  };\n};\n\nexport const addImageSelection = url => {\n  return {\n    type: \"ADD_URL\",\n    url: url\n  };\n};\n\nexport const deleteURL = url => dispatch => {\n  dispatch({\n    type: \"DELETE_URL\",\n    url: url\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { analyzeImage } from \"../actions\";\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\nimport { sendPositionInfo } from \"../actions/colorInfoActions\";\nimport { sendSelectedColor } from \"../actions/colorInfoActions\";\nimport { clearRecieved } from \"../actions/colorInfoActions\";\nimport { Dimmer, Loader, Grid, Icon } from \"semantic-ui-react\";\n\nclass ColorsList extends Component {\n  componentDidMount() {\n    // only make new api call if initally no colors\n    if (this.props.colors.length <= 1) {\n      this.props.clearRecieved();\n      this.props.analyzeImage(this.props.url);\n    }\n  }\n\n  // Make API call each time the URL changes\n  componentDidUpdate(prevProps) {\n    if (this.props.url !== prevProps.url) {\n      this.props.analyzeImage(this.props.url);\n    }\n\n    if (this.props.status === \"recieved\") {\n      // send the first square color info once information sent\n      // back from API\n      let hexColor = this.props.colors[0].hexColor;\n      let index = this.props.position;\n      let alpha = 1;\n      this.handleOnClickSquare(hexColor, index, alpha);\n      this.props.clearRecieved();\n    }\n  }\n\n  handleOnClickSquare(color, index, alpha) {\n    this.props.sendSelectedColor(color);\n    this.props.sendColorInfo(color, alpha);\n    this.props.sendPositionInfo(index);\n  }\n\n  renderColor(color, alpha) {\n    return {\n      backgroundColor: color,\n      opacity: alpha,\n      cursor: \"pointer\"\n    };\n  }\n\n  renderCarot(index) {\n    if (index === this.props.position) {\n      return {\n        color: \"black\"\n      };\n    } else {\n      return {\n        color: \"white\"\n      };\n    }\n  }\n\n  colorsRender() {\n    // if there is no error in request and colors data is returned\n    if (this.props.colors.length >= 1) {\n      const ColorsList = this.props.colors.map((color, index) => (\n        <div\n          // add index in case there are of same color\n          key={color.hexColor + index}\n          className=\"color-square-container\"\n        >\n          <div\n            className=\"color-square\"\n            style={this.renderColor(color.hexColor, color.alpha)}\n            onClick={() =>\n              this.handleOnClickSquare(color.hexColor, index, color.alpha)\n            }\n          />\n          <div style={this.renderCarot(index)} className=\"carot-container\">\n            <Icon size=\"big\" name=\"caret up\" />\n          </div>\n        </div>\n      ));\n      return ColorsList;\n    }\n  }\n\n  // Load a initial height before colors are recieved\n  renderLoaderHeight() {\n    if (this.props.colors.length === 0) {\n      return { height: 60 };\n    }\n  }\n  renderLoader() {\n    if (this.props.loader === \"show\") {\n      return (\n        <div style={this.renderLoaderHeight()}>\n          <Dimmer active inverted>\n            <Loader size=\"large\" inverted>\n              Loading Colors\n            </Loader>\n          </Dimmer>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Grid.Column width={16}>\n        {this.colorsRender()}\n        {this.renderLoader()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    colors: state.colors.colors,\n    selectedColor: state.colorInfo.selectedColor,\n    position: state.colorInfo.position,\n    url: state.url.url,\n    error: state.error,\n    status: state.colors.status,\n    token: state.auth.token,\n    loader: state.colors.loader\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    analyzeImage,\n    sendColorInfo,\n    sendPositionInfo,\n    sendSelectedColor,\n    clearRecieved\n  }\n)(ColorsList);\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, Image } from \"semantic-ui-react\";\n\nconst ImageMain = () => {\n  const url = useSelector(state => state.url.url);\n  return (\n    <Grid.Column mobile={16} computer={13}>\n      <Image className=\"sample-img\" src={url} alt=\"main\" />\n    </Grid.Column>\n  );\n};\n\nexport default ImageMain;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { analyzeImage } from \"../actions\";\nimport { changeMainImage } from \"../actions\";\nimport { addImageSelection } from \"../actions\";\nimport { closeImgModal } from \"../actions\";\nimport { openImgModal } from \"../actions\";\nimport { newImgSubmit } from \"../actions\";\nimport { clearImgSubmit } from \"../actions\";\nimport { clearErrorStatus } from \"../actions\";\nimport { showModalLoader } from \"../actions\";\nimport { sendErrorStatus } from \"../actions\";\nimport { Button, Modal, Input, Dimmer, Loader } from \"semantic-ui-react\";\n\nclass AddImgModal extends Component {\n  state = { input: \"\" };\n\n  submitURL(event) {\n    event.preventDefault();\n    if (this.state.input === \"\") {\n      return this.props.sendErrorStatus();\n    }\n    // if no duplicate urls and input not empty\n    if (\n      this.checkForDuplicateUrls() === \"no duplicates\" &&\n      this.state.input !== \"\"\n    ) {\n      this.props.analyzeImage(this.state.input);\n      this.props.newImgSubmit();\n      this.props.showModalLoader();\n    }\n  }\n\n  checkForDuplicateUrls() {\n    for (let i = 0; i < this.props.exampleImages.length; i++) {\n      if (this.state.input === this.props.exampleImages[i]) {\n        return \"duplicate exists\";\n      }\n    }\n    return \"no duplicates\";\n  }\n\n  componentDidUpdate() {\n    if (\n      this.props.error === false &&\n      this.props.status === \"recieved\" &&\n      this.props.image === \"new\"\n    ) {\n      // only run if there are no errors, data is recieved and a new image is submitted\n      this.props.changeMainImage(this.state.input);\n      this.props.addImageSelection(this.state.input);\n      this.props.clearImgSubmit();\n      this.setState({ input: \"\" });\n    }\n  }\n\n  handleInput(event) {\n    this.setState({ input: event.target.value });\n    // Clear error if someone types anything\n    this.props.clearErrorStatus();\n    // clear if new image submitted\n    this.props.clearImgSubmit();\n  }\n\n  renderURLinput() {\n    // if user clicks confirm with blank title\n    // render red error input\n    if (this.props.error === true) {\n      return (\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Please enter a url...\"\n          error\n        />\n      );\n    } else if (this.props.error !== false) {\n      return (\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Error! Please check url and try again...\"\n          error\n        />\n      );\n    } else {\n      //everything else render normal input\n      return (\n        <Input\n          className=\"url-input\"\n          type=\"text\"\n          onChange={event => this.handleInput(event)}\n          value={this.state.input}\n          placeholder=\"Copy and paste image url...\"\n        />\n      );\n    }\n  }\n\n  renderSubmitButton() {\n    if (this.state.input === \"\") {\n      return (\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color=\"blue\"\n          style={{ opacity: 0.7 }}\n        >\n          Submit\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          onClick={event => this.submitURL(event)}\n          className=\"ui button\"\n          color=\"blue\"\n        >\n          Submit\n        </Button>\n      );\n    }\n  }\n\n  renderErrorMessage() {\n    if (\n      this.props.error === true &&\n      this.state.input !== \"\" &&\n      this.checkForDuplicateUrls() === \"no duplicates\"\n    ) {\n      return <p> Please check URL and try again </p>;\n    }\n    if (this.checkForDuplicateUrls() === \"duplicate exists\") {\n      this.props.sendErrorStatus();\n      return <p> Image URL already exists. Please try a different one</p>;\n    }\n  }\n\n  renderLoader() {\n    if (this.props.loader === \"show\") {\n      return (\n        <Dimmer active inverted>\n          <Loader size=\"big\" inverted />\n        </Dimmer>\n      );\n    }\n  }\n  // Semantic UI settings\n  close = () => {\n    this.setState({ input: \"\" });\n    // Open and Close state in store.js instead of local state\n    this.props.closeImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  };\n\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({\n      closeOnEscape,\n      closeOnDimmerClick\n    });\n    this.props.openImgModal();\n    this.props.clearErrorStatus();\n    this.props.clearImgSubmit();\n  };\n\n  render() {\n    const { closeOnEscape, closeOnDimmerClick } = this.state;\n    return (\n      <div>\n        <Button onClick={this.closeConfigShow(false, true)} icon>\n          Try your own image\n        </Button>\n        <Modal\n          open={this.props.open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n          closeIcon\n        >\n          <Modal.Content className=\"add-image-modal\">\n            <h3>Try your own image</h3>\n            <form onSubmit={event => this.submitURL(event)}>\n              {this.renderURLinput()}\n              {this.renderSubmitButton()}\n            </form>\n            {this.renderErrorMessage()}\n            {this.renderLoader()}\n          </Modal.Content>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    open: state.colors.open,\n    error: state.colors.error,\n    status: state.colors.status,\n    loader: state.colors.loader,\n    image: state.colors.image,\n    exampleImages: state.url.exampleImages\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    analyzeImage,\n    changeMainImage,\n    addImageSelection,\n    closeImgModal,\n    openImgModal,\n    newImgSubmit,\n    clearImgSubmit,\n    clearErrorStatus,\n    showModalLoader,\n    sendErrorStatus\n  }\n)(AddImgModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeMainImage } from \"../actions\";\nimport { clearRecieved } from \"../actions/colorInfoActions\";\nimport { clearPosition } from \"../actions/colorInfoActions\";\nimport { deleteURL } from \"../actions\";\nimport { Grid, Icon } from \"semantic-ui-react\";\nimport ImageModal from \"./ImageModal\";\n\nclass ImageSelection extends Component {\n  handleClick(url) {\n    // first clear the status from API\n    this.props.clearRecieved();\n    // set position to 1\n    this.props.clearPosition();\n    this.props.changeMainImage(url);\n  }\n\n  renderBorder(selectedUrl) {\n    if (this.props.url === selectedUrl) {\n      return {\n        border: \"3px solid #0000CC\",\n        opacity: 1\n      };\n    } else {\n      return null;\n    }\n  }\n\n  renderImages() {\n    return this.props.exampleUrl.map(url => (\n      <div className=\"image-wrapper\" key={url}>\n        <img\n          className=\"image-selection\"\n          src={url}\n          alt=\"selection\"\n          style={this.renderBorder(url)}\n          onClick={() => this.handleClick(url)}\n        />\n        <div onClick={() => this.props.deleteURL(url)} className=\"delete-img\">\n          <Icon name=\"remove circle\" />\n        </div>\n      </div>\n    ));\n  }\n\n  render() {\n    return (\n      <Grid.Column mobile={16} computer={3}>\n        <div className=\"image-modal-container\">\n          <div className=\"images-container\">{this.renderImages()}</div>\n          <div className=\"modal-container\">\n            <ImageModal />\n          </div>\n        </div>\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    exampleUrl: state.url.exampleImages\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    changeMainImage,\n    clearRecieved,\n    clearPosition,\n    deleteURL,\n  }\n)(ImageSelection);\n","import React, { Component } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport { connect } from \"react-redux\";\nimport { updateHexColor } from \"../actions/colorInfoActions\";\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\nimport { sendAlphaInfo } from \"../actions/colorInfoActions\";\nimport { sendSelectedColor } from \"../actions/colorInfoActions\";\nimport { Grid } from \"semantic-ui-react\";\n\nclass ColorPicker extends Component {\n  handleChange = (color, event) => {\n    let colorPalette = this.props.colors;\n\n    // create new color object\n    let newColor = {\n      hexColor: color.hex.toUpperCase(),\n      alpha: color.rgb.a\n    };\n\n    //update new item in color array\n    colorPalette[this.props.position] = newColor;\n    // send new color pallette, use upppercase for hex colors\n    this.props.updateHexColor(colorPalette);\n    this.props.sendColorInfo(color.hex.toUpperCase());\n    this.props.sendSelectedColor(color.hex.toUpperCase());\n    this.props.sendAlphaInfo(color.rgb.a);\n  };\n\n  renderColorPicker() {\n    if (this.props.colors.length >= 1) {\n      return (\n        <div className=\"color-picker\">\n          <ChromePicker\n            className=\"chrome-picker\"\n            style={{\n              width: \"100%\",\n              marginRight: 4 + \"em\"\n            }}\n            color={{\n              r: this.props.R,\n              g: this.props.G,\n              b: this.props.B,\n              a: this.props.colors[this.props.position].alpha\n            }}\n            onChangeComplete={this.handleChange}\n          />\n        </div>\n      );\n    }\n    return <ChromePicker className=\"color-picker\" />;\n  }\n\n  render() {\n    return (\n      <Grid.Column mobile={16} tablet={9} computer={10}>\n        {this.renderColorPicker()}\n      </Grid.Column>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    hexColor: state.colorInfo.hexColor,\n    R: state.colorInfo.R,\n    G: state.colorInfo.G,\n    B: state.colorInfo.B,\n    a: state.colorInfo.alpha,\n    colors: state.colors.colors,\n    position: state.colorInfo.position\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateHexColor,\n    sendColorInfo,\n    sendSelectedColor,\n    sendAlphaInfo\n  }\n)(ColorPicker);\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./css/colorInfo.css\";\n\nconst ColorInfo = () => {\n  const hexColor = useSelector(state => state.colorInfo.hexColor);\n  const R = useSelector(state => state.colorInfo.R);\n  const G = useSelector(state => state.colorInfo.G);\n  const B = useSelector(state => state.colorInfo.B);\n  const alpha = useSelector(state => state.colorInfo.alpha);\n\n  return (\n    <div className=\"color-info\">\n      <h5>Hex</h5>\n      <input className=\"hex-info-input\" defaultValue={hexColor}/>\n      <p className=\"info-text\">R</p>\n      <p className=\"info-text\">G</p>\n      <p className=\"info-text\">B</p>\n      <p className=\"info-text\">a</p>\n      <div>\n        <input className=\"info-input\" defaultValue={R} readOnly />\n        <input className=\"info-input\" defaultValue={G} readOnly />\n        <input className=\"info-input\" defaultValue={B} readOnly />\n        <input\n          className=\"info-input\"\n          defaultValue={alpha}\n          readOnly\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ColorInfo;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { analyzeImage } from \"../actions\";\nimport { clearRecieved } from \"../actions/colorInfoActions\";\nimport { clearPosition } from \"../actions/colorInfoActions\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nconst Regenerate = () => {\n  const url = useSelector(state => state.url.url);\n  const dispatch = useDispatch();\n\n  const handleClick = (url) => {\n    // first clear the status from API\n    dispatch(clearRecieved());\n    // set position to 1\n    dispatch(clearPosition());\n    dispatch(analyzeImage(url));\n  };\n\n  return (\n    <Button className=\"regen-btn\" onClick={() => handleClick(url)}>\n      <Icon name=\"redo\" /> Regenerate\n    </Button>\n  );\n}\n\nexport default Regenerate;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { newColorPalette } from \"../actions/MyPaletteAPI\";\nimport { Button, Modal, Input, Header, Icon } from \"semantic-ui-react\";\n\nclass SavePalette extends Component {\n  state = {\n    input: \"\",\n    open: false,\n    error: false,\n    placeHolder: \"New Palette Name...\"\n  };\n\n  handleInput(event) {\n    // set error to false as long as there's user input\n    this.setState({\n      input: event.target.value,\n      error: false,\n      placeHolder: \"New Palette Name...\"\n    });\n  }\n\n  // Modal Settings\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\n    this.setState({ closeOnEscape, closeOnDimmerClick, open: true });\n  };\n\n  close = () => {\n    // reset to default state on close\n    this.setState({\n      input: \"\",\n      open: false,\n      error: false\n    });\n  };\n\n  // Send new color set to database\n  handleConfirmClick() {\n    this.props.newColorPalette(\n      {\n        url: this.props.url,\n        email: this.props.email,\n        title: this.state.input,\n        colors: this.props.colors\n      },\n      this.props.email\n    );\n    this.close();\n  }\n\n  setError() {\n    if (this.state.input === \"\") {\n      this.setState({\n        error: true,\n        placeHolder: \"Title Required...\"\n      });\n    }\n\n    if (this.state.input.length >= 40) {\n      this.setState({\n        error: true,\n        placeHolder: \"Over Max Characters Allowed\"\n      });\n    }\n  }\n\n  renderConfirmButton() {\n    // set error to true if empty title input\n    if (this.state.input === \"\" || this.state.input.length >= 40) {\n      return (\n        <Button\n          onClick={() => this.setError()}\n          color=\"blue\"\n          style={{ opacity: 0.7 }}\n        >\n          Create New\n        </Button>\n      );\n    } else {\n      return (\n        <Link to=\"/MyPallettes\">\n          <Button\n            color=\"blue\"\n            style={{ marginLeft: 0.75 + \"em\" }}\n            onClick={() => this.handleConfirmClick()}\n          >\n            Create New\n          </Button>\n        </Link>\n      );\n    }\n  }\n\n  colorsRender() {\n    const ColorsList = this.props.colors.map((color, index) => (\n      <div key={color.hexColor + index} className=\"color-square-container\">\n        <div\n          className=\"color-square\"\n          style={{\n            backgroundColor: color.hexColor,\n            opacity: color.alpha\n          }}\n        />\n        <p>{color.hexColor}</p>\n      </div>\n    ));\n    return ColorsList;\n  }\n\n  render() {\n    const {\n      open,\n      closeOnEscape,\n      closeOnDimmerClick,\n      error,\n      placeHolder\n    } = this.state;\n\n    return (\n      <div>\n        <Button\n          onClick={this.closeConfigShow(true, false)}\n          className=\"save-pallette\"\n          icon\n        >\n          <Icon name=\"save\" /> Save Palette\n        </Button>\n        <Modal\n          open={open}\n          closeOnEscape={closeOnEscape}\n          closeOnDimmerClick={closeOnDimmerClick}\n          onClose={this.close}\n          closeIcon\n        >\n          <Modal.Content>\n            <Header as=\"h2\">Save Palette</Header>\n            <Input\n              className=\"savepalette-modal-input\"\n              label=\"Title\"\n              value={this.state.input}\n              onChange={event => this.handleInput(event)}\n              placeholder={placeHolder}\n              error={error}\n            />\n            <div className=\"colors-render\">{this.colorsRender()}</div>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button onClick={() => this.close()}>Cancel</Button>\n            {this.renderConfirmButton()}\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    url: state.url.url,\n    email: state.auth.user.email,\n    colors: state.colors.colors,\n    token: state.auth.token\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { newColorPalette }\n)(SavePalette);\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ColorsList from \"./ColorsList\";\nimport ImageMain from \"./ImageMain\";\nimport ImageSelection from \"./ImageSelection\";\nimport ColorPicker from \"./ColorPicker\";\nimport ColorInfo from \"./ColorInfo\";\nimport Regenerate from \"./Regenerate\";\nimport SavePalette from \"./SavePalette\";\nimport {\n  Container,\n  Grid,\n  Popup,\n  Button,\n  Icon,\n  Header\n} from \"semantic-ui-react\";\n\nconst Generate = () => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\n  const savepaletteRender = () => {\n    if (isAuthenticated) {\n      return <SavePalette />;\n    } else {\n      return (\n        <Popup\n          trigger={\n            <Button className=\"save-pallette\">\n              <Icon name=\"save\" /> Save Palette\n            </Button>\n          }\n          content=\"Log In required for this feature\"\n          position=\"bottom right\"\n          size=\"large\"\n          basic\n        />\n      );\n    }\n  }\n  return (\n    <div className=\"HomePage\">\n      <Container textAlign=\"center\">\n        <Header as=\"h1\" className=\"generate-header\">\n          Choose a picture and analyze\n        </Header>\n        <Grid celled>\n          <Grid.Row>\n            <ImageSelection />\n            <ImageMain />\n          </Grid.Row>\n          <Grid.Row>\n            <ColorsList />\n          </Grid.Row>\n          <Grid.Row>\n            <ColorPicker />\n            <Grid.Column mobile={16} tablet={7} computer={6}>\n              <ColorInfo />\n              <div className=\"regen-save-buttons\">\n                <Regenerate />\n                {savepaletteRender()}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default Generate;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { loadUser } from \"../actions/authActions\";\nimport Analytics from \"react-router-ga\";\nimport HeaderMenu from \"./HeaderMenu\";\nimport LandingPage from \"./LandingPage\";\nimport MyPallettes from \"./MyPallettes\";\nimport Footer from \"./Footer\";\nimport Generate from \"./Generate\";\nimport \"./App.css\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"This app was created by Nelson Bailey III, for  DigitalCrafts Capstone Project! Email me at:NelsonbIII@outlook.com. Have Fun!!\");\n    if (localStorage.getItem(\"token\") !== null) {\n      dispatch(loadUser());\n    }\n  });\n  return (\n    <BrowserRouter>\n      <Analytics id=\"UA-135017095-3\" debug>\n        <HeaderMenu />\n        <Route path=\"/\" exact component={LandingPage} />\n        <Route path=\"/Generate\" component={Generate} />\n        <Route path=\"/MyPallettes\" component={MyPallettes} />\n        <Footer />\n      </Analytics>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initialState = {\n  colors: [],\n  status: '',\n  error: false,\n  errorData: '',\n  open: false,\n  loader: 'hide',\n  image: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'ANALYZE_IMAGE':\n      return {...state,\n        colors: action.payload,\n        status: action.status,\n        // only close modal once success payload is recieved\n        open: action.open,\n        // clear error message if success\n        error: action.error,\n        loader: action.loader\n      };\n    case 'CLARIFAI_REQUEST_WAITING':\n      return {\n        ...state,\n        loader: 'show'\n      };\n    case 'CLEAR_RECIEVED':\n      return {\n        ...state,\n        status: action.status\n      };\n    case 'NEW_IMAGE_SUBMIT':\n      return {\n        ...state,\n        image: 'new'\n      };\n    case 'CLEAR_IMAGE_SUBMIT':\n      return {\n        ...state,\n        image: ''\n      };\n    case 'SEND_ERROR':\n      return {\n        ...state,\n        error: true\n      }\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: false\n      }\n    case 'ANALYZE_IMAGE_ERROR':\n      return {\n        ...state,\n        errorData: action.errorData,\n        error: action.error,\n        loader: action.loader,\n        // keep modal open if error\n        open: action.open\n      };\n    case 'OPEN_IMAGE_MODAL':\n      return {\n        ...state,\n        open: true,\n        error: false\n      };\n    case 'CLOSE_IMAGE_MODAL':\n      return {\n        ...state,\n        open: false,\n        error: false,\n      };\n    case 'UPDATE_HEX_COLOR':\n      function updateObjectInArray(array, action) {\n        return array.map((item, index) => {\n          if (index !== action.index) {\n            // This isn't the item we care about - keep it as-is\n            return item\n          }\n          // Otherwise, this is the one we want - return an updated value\n          return {\n            ...item,\n            ...action.item\n          }\n        })\n      }\n      return {...state,\n          colors: updateObjectInArray(state.colors, action.newColorSet)\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  url: 'https://images.unsplash.com/photo-1619717244859-d1d0044dd244?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1351&q=80',\n  exampleImages: [\n    'https://images.unsplash.com/photo-1619717244859-d1d0044dd244?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1351&q=80',\n    'https://images.unsplash.com/photo-1619722005557-70d4ab332aa6?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=633&q=80',\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\n  ],\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'MAIN_IMAGE':\n      // so no empty string urls are being set\n      if (action.url.length === 0) {\n        return state;\n      }\n      return {\n       ...state,\n       url: action.url\n     };\n    case 'ADD_URL':\n      if (action.url.length === 0) {\n        return state;\n      }\n      return {\n       ...state,\n       exampleImages: state.exampleImages.concat(action.url)\n     };\n     case 'DELETE_URL':\n     // temporary so at least one image is showing and no react errors\n     if(state.exampleImages.length === 1) {\n        return state;\n     }\n      const newImageList = state.exampleImages.filter( url => url !== action.url);\n      return {\n        ...state,\n        // set new url to first one in new Image list\n        url: newImageList[0],\n        exampleImages: newImageList\n      };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  hexColor: '',\n  R: '',\n  G: '',\n  B: '',\n  alpha: '',\n  position: 0,\n  selectedColor: ''\n}\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'SEND_COLOR_INFO':\n      return {...state,\n        hexColor: action.hexColor,\n        R: action.R,\n        G: action.G,\n        B: action.B,\n        alpha: action.alpha\n      };\n      case 'SEND_POSITION_INFO':\n        return {...state,\n          position: action.position\n        };\n      case 'CLEAR_POSITION_INFO':\n        return {...state,\n          position: action.position\n          };\n      case 'SEND_ALPHA_INFO':\n        return {...state,\n          alpha: action.alpha\n        };\n      case 'SELECTED_COLOR':\n        return {...state,\n          selectedColor: action.selectedColor\n        };\n    default:\n     return state;\n  }\n};\n","const initialState = {\n  Data: [],\n  AddColor: \"\",\n  DeleteColor: \"\",\n  UpdateColor: \"\",\n  loading: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_COLORS\":\n      return {\n        ...state,\n        Data: action.payload,\n        loading: false\n      };\n    case \"ADD_COLORS\":\n      return {\n        ...state,\n        Data: state.Data.concat(action.payload),\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\n      };\n    case \"UPDATE_COLORS\":\n      return {\n        ...state,\n        UpdateColor: `${action.payload} is the new update`\n      };\n    case \"DELETE_COLORS\":\n      return {\n        ...state,\n        Data: state.Data.filter(item => item._id !== action.payload),\n        DeleteColor: `${action.payload} was Deleted`\n      };\n    case \"COLORS_LOADING\":\n      return {\n        ...state,\n        loading: true\n      };\n    case \"CLEAR_PALETTE_COLORS\":\n      return {\n        ...state,\n        Data: [],\n        AddColor: \"\",\n        DeleteColor: \"\",\n        UpdateColor: \"\"\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  message: '',\n  status: null\n};\n\nexport default (state = initialState, action) => {\n  switch(action.type) {\n    case 'GET_ERRORS':\n      return {\n        message: action.payload.data,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case 'CLEAR_ERRORS':\n      return {\n        msg: '',\n        status: null\n      };\n    default:\n    return state;\n  }\n}\n","\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  isLoading: false,\n  user: '',\n  modal: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'USER_LOADING':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'USER_LOADED':\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case 'OPEN_MODAL':\n      return {\n        ...state,\n        modal: true\n      };\n    case 'CLOSE_MODAL':\n      return {\n        ...state,\n        modal: false\n      };\n    case 'LOGIN_SUCCESS':\n    case 'REGISTER_SUCCESS':\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        modal: false\n      };\n    case 'AUTH_ERROR':\n    case 'LOGIN_FAIL':\n    case 'LOGOUT_SUCCESS':\n    case 'REGISTER_FAIL':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        user: '',\n        isAuthenticated: false,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport clarifaiReducer from './clarifaiReducer';\nimport imageUrlReducer from './imageUrlReducer';\nimport colorInfoReducer from './colorInfoReducer';\nimport colorPaletteReducer from './colorPaletteReducer';\nimport errorsReducer from './errorsReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n  colors: clarifaiReducer,\n  url: imageUrlReducer,\n  colorInfo: colorInfoReducer,\n  myPalettes: colorPaletteReducer,\n  errors: errorsReducer,\n  auth: authReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst initialState = {};\n\nconst store = createStore(\n  reducers,\n  initialState,\n  applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}